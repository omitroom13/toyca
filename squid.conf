#
# Recommended minimum configuration:
#

# Example rule allowing access from your local networks.
# Adapt to list your (internal) IP networks from where browsing
# should be allowed
acl localnet src 10.0.0.0/8	# RFC1918 possible internal network
acl localnet src 172.16.0.0/12	# RFC1918 possible internal network
acl localnet src 192.168.0.0/16	# RFC1918 possible internal network
acl localnet src fc00::/7       # RFC 4193 local private network range
acl localnet src fe80::/10      # RFC 4291 link-local (directly plugged) machines

acl SSL_ports port 443
acl Safe_ports port 80		# http
acl Safe_ports port 21		# ftp
acl Safe_ports port 443		# https
acl Safe_ports port 70		# gopher
acl Safe_ports port 210		# wais
acl Safe_ports port 1025-65535	# unregistered ports
acl Safe_ports port 280		# http-mgmt
acl Safe_ports port 488		# gss-http
acl Safe_ports port 591		# filemaker
acl Safe_ports port 777		# multiling http
acl CONNECT method CONNECT

#
# Recommended minimum Access Permission configuration:
#
# Deny requests to certain unsafe ports
http_access deny !Safe_ports

# Deny CONNECT to other than secure SSL ports
http_access deny CONNECT !SSL_ports

# Only allow cachemgr access from localhost
http_access allow localhost manager
http_access deny manager

# We strongly recommend the following be uncommented to protect innocent
# web applications running on the proxy server who think the only
# one who can access services on "localhost" is a local user
#http_access deny to_localhost

#
# INSERT YOUR OWN RULE(S) HERE TO ALLOW ACCESS FROM YOUR CLIENTS
#

# Example rule allowing access from your local networks.
# Adapt localnet in the ACL section to list your (internal) IP networks
# from where browsing should be allowed
http_access allow localnet
http_access allow localhost

# And finally deny all other access to this proxy
http_access deny all

#sslproxy_cafile /etc/ssl/certs/selfsign-ca-2.pem
# Squid normally listens to port 3128
#http_port 3128 ssl-bump cert=/etc/squid/cert.pem generate-host-certificates=on dynamic_cert_mem_cache_size=4MB
#http_port 3128 ssl-bump cert=/etc/squid/cert/cert.pem generate-host-certificates=on dynamic_cert_mem_cache_size=4MB
#http_port 3128 ssl-bump cert=/etc/squid/cert/cert.pem key=/etc/squid/cert/key.pem generate-host-certificates=on dynamic_cert_mem_cache_size=4MB

http_port 3128 ssl-bump cert=/etc/squid/cert.pem key=/etc/squid/key.pem generate-host-certificates=on dynamic_cert_mem_cache_size=4MB

# key=/etc/squid/key-nopass.pem
# cafile=/etc/ssl/certs/selfsign-ca-2.pem

#initialize /usr/lib/squid/ssl_crtd -c -s /var/lib/ssl_db
sslcrtd_program /usr/lib/squid/ssl_crtd -s /var/lib/ssl_db -M 4MB

acl step1 at_step SslBump1
ssl_bump peek step1
ssl_bump bump all
# Uncomment and adjust the following to add a disk cache directory.
#cache_dir ufs /var/cache/squid 100 16 256

# Leave coredumps in the first cache dir
coredump_dir /var/cache/squid

#
# Add any of your own refresh_pattern entries above these.
#
refresh_pattern ^ftp:		1440	20%	10080
refresh_pattern ^gopher:	1440	0%	1440
refresh_pattern -i (/cgi-bin/|\?) 0	0%	0
refresh_pattern .		0	20%	4320

# No Cache
acl NOCACHE src all
cache deny NOCACHE
cache_dir null /dev/null

# log -> stdout
logformat json {"epoch":"%ts.%03tu", "response":"%tr", "client":"%>a", "status":{"squid":"%Ss", "client":"%03>Hs", "hierarchy": "%Sh"}, "size":"%<st", "method":"%rm", "url":"%ru", "user":"%[un", "server":"%<a", "mime":"%mt"}
access_log stdio:/dev/stdout json
# cache_log stdio:/dev/stdout
# cache_store_log stdio:/dev/stdout
