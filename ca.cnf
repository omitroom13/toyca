HOME	    = .
RANDFILE    = $ENV::HOME/.rnd
CANAME      = $ENV::CANAME
CATOP       = $ENV::CATOP
CRLAIA      = $ENV::CRLAIA
SAN         = $ENV::SAN
oid_section = new_oids

[ new_oids ]
microsoft = 1.3.6.1.4.1.311
MS_ENROLLMENT_NAME_VALUE_PAIR = ${microsoft}.13.2.1
MS_ID_ENROLLMENT_CSP_PROVIDER = ${microsoft}.13.2.2
MS_OS_VERSION                 = ${microsoft}.13.2.3

MS_ENROLL_CERTTYPE_EXTENSION  = ${microsoft}.20.2
# openssl 側で定義済み
# msSmartcardLogin              = ${microsoft}.20.2.2
MS_CERTSRV_CA_VERSION         = ${microsoft}.21.1
MS_REQUEST_CLIENT_INFO        = ${microsoft}.21.20
MS_ENCRYPTED_KEY_HASH         = ${microsoft}.21.21   
MS_CERTSRV_CROSSCA_VERSION    = ${microsoft}.21.22    

[ ca ]
default_ca	= ca_any		#!The default ca section

[ ca_any ]
dir		= $CATOP		#!Where everything is kept
certs		= $dir/certs		# Where the issued certs are kept
crl_dir		= $dir/crl		# Where the issued crl are kept
database	= $dir/index.txt	# database index file.
new_certs_dir	= $dir/newcerts		# default place for new certs.
certificate	= $dir/cacert.pem 	# The CA certificate
serial		= $dir/serial 		# The current serial number
crlnumber	= $dir/crlnumber	# the current crl number
crl		= $dir/crl.pem 		# The current CRL
private_key	= $dir/private/cakey.pem# The private key
RANDFILE	= $dir/private/.rand	# private random number file
x509_extensions	= ext_ca		# The extentions to add to the cert

name_opt 	= ca_default		# Subject Name options
cert_opt 	= ca_default		# Certificate field options

default_days	= 730			# how long to certify for
default_crl_days= 180			# how long before next CRL
default_md	= sha256		#!use public key default MD
preserve	= yes			#!keep passed DN ordering
policy		= policy_ca
email_in_dn     = no
unique_subject  = no

[ policy_ca ]
organizationName	= match
commonName		= supplied

[ policy_any ]
commonName		= supplied

[ policy_choroi ]
countryName             = optional
stateOrProvinceName     = optional
localityName            = optional
organizationName        = optional
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = optional

[ req ]
default_bits	   = 2048
default_keyfile    = key.pem
distinguished_name = req_dn_ca
attributes	   = req_ca
x509_extensions	   = ext_ca
string_mask        = utf8only

[ req_ca ]
subjectKeyIdentifier=hash
authorityKeyIdentifier=keyid:always,issuer
basicConstraints = CA:true
#copy_extensions = copy

[ req_dn_ca ]
organizationName		= Organization Name (eg, company)
organizationName_default	= ToyCA
commonName			= Common Name (e.g. server FQDN or YOUR name)
commonName_max			= 64

[ req_attributes ]

[ ext_ca ]
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints       = CA:true
authorityInfoAccess    = caIssuers;URI:http://$CRLAIA/$CANAME.cer
crlDistributionPoints  = URI:http://$CRLAIA/$CANAME.crl

[ ext_enterprise ]
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints       = critical, CA:true
keyUsage               = digitalSignature, keyCertSign, cRLSign
MS_ENROLL_CERTTYPE_EXTENSION = ASN1:BMP:SubCA
MS_CERTSRV_CA_VERSION  = ASN1:INTEGER:0
authorityInfoAccess    = caIssuers;URI:http://$CRLAIA/$CANAME.cer
crlDistributionPoints  = URI:http://$CRLAIA/$CANAME.crl

[ ext_client ]
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid:always,issuer
#nsCertType             = email, client
basicConstraints       = critical, CA:false
extendedKeyUsage       = critical, clientAuth, emailProtection, msSmartcardLogin
keyUsage               = digitalSignature, keyEncipherment
#email:<mailaddress>, otherName:msUPN;UTF8:<upn>
subjectAltName         = $SAN
authorityKeyIdentifier = keyid,issuer
authorityInfoAccess    = caIssuers;URI:http://$CRLAIA/$CANAME.cer
crlDistributionPoints  = URI:http://$CRLAIA/$CANAME.crl

[ ext_server ]
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid:always,issuer
extendedKeyUsage       = critical, serverAuth , clientAuth
keyUsage               = digitalSignature, keyEncipherment
#DNS:<fqdn or wildcard>, IP:<ip>, ....
subjectAltName         = $SAN
authorityKeyIdentifier = keyid,issuer
authorityInfoAccess    = caIssuers;URI:http://$CRLAIA/$CANAME.cer
crlDistributionPoints  = URI:http://$CRLAIA/$CANAME.crl
#EV SSL
#policyConstraints     =

[ ext_ocsp ]
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints       = CA:FALSE
keyUsage               = nonRepudiation, digitalSignature, keyEncipherment
extendedKeyUsage       = OCSPSigning

[ ext_client_ms ]
#以下のエクステンションがMSのクライアント証明書特有かもしれないが、おそらくいらない。
MS_CERTIFICATE_TEMPLATE       = DER:302E06262B060104018237150885F88F1C86FED61787A98F0986F48C1F81D38F094B87B49405839DA83502016402010D
MS_APPLICATION_CERT_POLICIES  = DER:3026300C060A2B060104018237140202300A06082B06010505070302300A06082B06010505070304
SMIME-CAPS                    = DER:3035300E06082A864886F70D030202020080300E06082A864886F70D030402020080300706052B0E030207300A06082A864886F70D0307

[ crl_ext ]
authorityKeyIdentifier=keyid:always
